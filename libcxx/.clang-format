BasedOnStyle: LLVM

AlignAfterOpenBracket: Align
AlignConsecutiveAssignments: Consecutive
AlignConsecutiveBitFields: Consecutive
AlignEscapedNewlines: Right
AlignOperands: AlignAfterOperator
AlignTrailingComments: true
AllowAllArgumentsOnNextLine: true
AllowAllParametersOfDeclarationOnNextLine: true
AllowShortFunctionsOnASingleLine: true
AllowShortLambdasOnASingleLine: All
AttributeMacros: ['_LIBCUDACXX_HIDE_FROM_ABI',
                  '_LIBCUDACXX_CONSTEXPR',
                  '_LIBCUDACXX_CONSTEXPR_AFTER_CXX11',
                  '_LIBCUDACXX_CONSTEXPR_AFTER_CXX14',
                  '_LIBCUDACXX_CONSTEXPR_AFTER_CXX17',
                  '_LIBCUDACXX_CONSTEXPR_AFTER_CXX20',
                  '_LIBCUDACXX_ALIGNOF',
                  '_ALIGNAS_TYPE',
                  '_ALIGNAS',
                  '_LIBCUDACXX_NORETURN',
                  '_LIBCUDACXX_ALWAYS_INLINE',
                  '_LIBCUDACXX_DISABLE_EXTENTSION_WARNING',
                  '_LIBCUDACXX_HIDDEN',
                  '_LIBCUDACXX_METHOD_TEMPLATE_IMPLICIT_INSTANTIATION_VIS',
                  '_LIBCUDACXX_FUNC_VIS',
                  '_LIBCUDACXX_TYPE_VIS',
                  '_LIBCUDACXX_TEMPLATE_VIS',
                  '_LIBCUDACXX_TEMPLATE_DATA_VIS',
                  '_LIBCUDACXX_EXPORTED_FROM_ABI',
                  '_LIBCUDACXX_OVERRIDABLE_FUNC_VIS',
                  '_LIBCUDACXX_EXCEPTION_ABI',
                  '_LIBCUDACXX_ENUM_VIS',
                  '_LIBCUDACXX_EXTERN_TEMPLATE_TYPE_VIS',
                  '_LIBCUDACXX_INTERNAL_LINKAGE',
                  '_LIBCUDACXX_EXCLUDE_FROM_EXPLICIT_INSTANTIATION',
                  '_LIBCUDACXX_HIDE_FROM_ABI_AFTER_V1',
                  '_LIBCUDACXX_INLINE_VISIBILITY',
                  '_LIBCUDACXX_CONSTEVAL',
                  '_LIBCUDACXX_NOALIAS',
                  '_LIBCUDACXX_USING_IF_EXISTS',
                  '_LIBCUDACXX_DEPRECATED',
                  '_LIBCUDACXX_DEPRECATED_IN_CXX11',
                  '_LIBCUDACXX_DEPRECATED_IN_CXX14',
                  '_LIBCUDACXX_DEPRECATED_IN_CXX17',
                  '_LIBCUDACXX_DEPRECATED_IN_CXX20',
                  '_LIBCUDACXX_NODISCARD',
                  '_LIBCUDACXX_NODISCARD_EXT',
                  '_LIBCUDACXX_NO_DESTROY',
                  '_LIBCUDACXX_WEAK',
                  '_LIBCUDACXX_CONSTINIT',
                  '_LIBCUDACXX_FALLTHROUGH',
                  '_LIBCUDACXX_STANDALONE_DEBUG',
                  '_LIBCUDACXX_NO_UNIQUE_ADDRESS',
                 ]
BinPackArguments: false
BinPackParameters: false
BreakBeforeConceptDeclarations: true
BreakInheritanceList: BeforeColon
EmptyLineAfterAccessModifier: Never
EmptyLineBeforeAccessModifier: Always
IndentWrappedFunctionNames: false
IndentRequires: true
InsertTrailingCommas: Wrapped
KeepEmptyLinesAtTheStartOfBlocks: false
MaxEmptyLinesToKeep: 1
NamespaceIndentation: Inner
PackConstructorInitializers: NextLine

PenaltyIndentedWhitespace: 2

Language: Cpp
Standard: c++20
SpacesInAngles: Leave

AlwaysBreakTemplateDeclarations: true
PointerAlignment: Left


# Disable formatting options which may break tests.
SortIncludes: false
ReflowComments: false

# libc++'s preferred indentions of preprocessor statements.
IndentPPDirectives: AfterHash

# libc++ has some long names so we need more than the 80 column limit imposed by LLVM style, for sensible formatting
ColumnLimit: 120
