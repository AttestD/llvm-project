// -*- C++ -*-
//===----------------------------------------------------------------------===//
//
// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
//===----------------------------------------------------------------------===//

#ifndef _LIBCUDACXX_CWCTYPE
#define _LIBCUDACXX_CWCTYPE

/*
    cwctype synopsis

Macros:

    WEOF

namespace std
{

Types:

    wint_t
    wctrans_t
    wctype_t

int iswalnum(wint_t wc);
int iswalpha(wint_t wc);
int iswblank(wint_t wc);  // C99
int iswcntrl(wint_t wc);
int iswdigit(wint_t wc);
int iswgraph(wint_t wc);
int iswlower(wint_t wc);
int iswprint(wint_t wc);
int iswpunct(wint_t wc);
int iswspace(wint_t wc);
int iswupper(wint_t wc);
int iswxdigit(wint_t wc);
int iswctype(wint_t wc, wctype_t desc);
wctype_t wctype(const char* property);
wint_t towlower(wint_t wc);
wint_t towupper(wint_t wc);
wint_t towctrans(wint_t wc, wctrans_t desc);
wctrans_t wctrans(const char* property);

}  // std

*/

#include <__assert> // all public C++ headers provide the assertion handler
#include <__config>
#include <cctype>
#include <wctype.h>

#if !defined(_LIBCUDACXX_HAS_NO_PRAGMA_SYSTEM_HEADER)
#  pragma GCC system_header
#endif

_LIBCUDACXX_BEGIN_NAMESPACE_STD

#if defined(_LIBCUDACXX_INCLUDED_C_LIBRARY_WCTYPE_H)
using ::wint_t _LIBCUDACXX_USING_IF_EXISTS;
using ::wctrans_t _LIBCUDACXX_USING_IF_EXISTS;
using ::wctype_t _LIBCUDACXX_USING_IF_EXISTS;
using ::iswalnum _LIBCUDACXX_USING_IF_EXISTS;
using ::iswalpha _LIBCUDACXX_USING_IF_EXISTS;
using ::iswblank _LIBCUDACXX_USING_IF_EXISTS;
using ::iswcntrl _LIBCUDACXX_USING_IF_EXISTS;
using ::iswdigit _LIBCUDACXX_USING_IF_EXISTS;
using ::iswgraph _LIBCUDACXX_USING_IF_EXISTS;
using ::iswlower _LIBCUDACXX_USING_IF_EXISTS;
using ::iswprint _LIBCUDACXX_USING_IF_EXISTS;
using ::iswpunct _LIBCUDACXX_USING_IF_EXISTS;
using ::iswspace _LIBCUDACXX_USING_IF_EXISTS;
using ::iswupper _LIBCUDACXX_USING_IF_EXISTS;
using ::iswxdigit _LIBCUDACXX_USING_IF_EXISTS;
using ::iswctype _LIBCUDACXX_USING_IF_EXISTS;
using ::wctype _LIBCUDACXX_USING_IF_EXISTS;
using ::towlower _LIBCUDACXX_USING_IF_EXISTS;
using ::towupper _LIBCUDACXX_USING_IF_EXISTS;
using ::towctrans _LIBCUDACXX_USING_IF_EXISTS;
using ::wctrans _LIBCUDACXX_USING_IF_EXISTS;
#endif // _LIBCUDACXX_INCLUDED_C_LIBRARY_WCTYPE_H

_LIBCUDACXX_END_NAMESPACE_STD

#endif // _LIBCUDACXX_CWCTYPE
