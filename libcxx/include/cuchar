// -*- C++ -*-
//===----------------------------------------------------------------------===//
//
// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
//===----------------------------------------------------------------------===//

#ifndef _LIBCUDACXX_CUCHAR
#define _LIBCUDACXX_CUCHAR

/*
    cuchar synopsis // since C++11

Macros:

    __STDC_UTF_16__
    __STDC_UTF_32__

namespace std {

Types:

  mbstate_t
  size_t

size_t mbrtoc16(char16_t* pc16, const char* s, size_t n, mbstate_t* ps);
size_t c16rtomb(char* s, char16_t c16, mbstate_t* ps);
size_t mbrtoc32(char32_t* pc32, const char* s, size_t n, mbstate_t* ps);
size_t c32rtomb(char* s, char32_t c32, mbstate_t* ps);

} // std

*/

#include <__assert> // all public C++ headers provide the assertion handler
#include <__config>
#include <uchar.h>

#if !defined(_LIBCUDACXX_HAS_NO_PRAGMA_SYSTEM_HEADER)
#  pragma GCC system_header
#endif

_LIBCUDACXX_BEGIN_NAMESPACE_STD

#if !defined(_LIBCUDACXX_CXX03_LANG)

using ::mbstate_t _LIBCUDACXX_USING_IF_EXISTS;
using ::size_t _LIBCUDACXX_USING_IF_EXISTS;

using ::mbrtoc16 _LIBCUDACXX_USING_IF_EXISTS;
using ::c16rtomb _LIBCUDACXX_USING_IF_EXISTS;
using ::mbrtoc32 _LIBCUDACXX_USING_IF_EXISTS;
using ::c32rtomb _LIBCUDACXX_USING_IF_EXISTS;

#endif // _LIBCUDACXX_CXX03_LANG

_LIBCUDACXX_END_NAMESPACE_STD

#endif  // _LIBCUDACXX_CUCHAR
